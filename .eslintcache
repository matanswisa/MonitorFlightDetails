[{"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/index.js":"1","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/reportWebVitals.js":"2","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/App.js":"3","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/VisualFlightMonitor/visualFlightMonitor.js":"4","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/TextualMonitor/textualMonitor.js":"5","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/TextualMonitor/TextMonitorCard/textualMonitorCard.js":"6","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/VisualFlightMonitor/HIS/HISComponent.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1405,"mtime":1607928873103,"results":"11","hashOfConfig":"9"},{"size":600,"mtime":1607930571708,"results":"12","hashOfConfig":"9"},{"size":1286,"mtime":1607884581523,"results":"13","hashOfConfig":"9"},{"size":648,"mtime":1607702840000,"results":"14","hashOfConfig":"9"},{"size":3007,"mtime":1607930283855,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1awsp0s",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/index.js",[],["34","35"],"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/reportWebVitals.js",[],"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/App.js",["36"],"import React, { Component } from 'react';\nimport VisualMonitor from './VisualFlightMonitor/visualFlightMonitor.js'\nimport TextualMonitor from './TextualMonitor/textualMonitor.js';\nimport socketIoClient from 'socket.io-client';\nimport './App.css';\n\nlet socket;\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      endpoint:'http://localhost:8080',\n      data:null,\n      socket:{\n        autoConnect:true\n      },\n      flightCords:{\n        his:0,\n        adi:0,\n        altitude:0\n      }\n    }\n  }\n\n\n  componentDidMount(){\n    socket = socketIoClient.connect(this.state.endpoint, {'timeout':Infinity});\n    console.log(socket);\n    socket.on('cords',data=>{\n      console.log(`${socket} just got his cords`);\n      console.log(data);\n      this.setState({flightCords:data});\n    });\n  }\n\n  render() {\n    console.log('Inside App.js');\n    return (\n      <div className=\"App\">\n        <div className=\"jumbotron jumbotron-fluid\">\n          <div className=\"buttons-wrapper\" style={{left:\"0px\", width:\"200px\", padding:\"10px\"}}>\n          <button className=\"btn btn-primary\">Visual</button> \n          <button className=\"btn btn-primary\">Textual</button> \n          </div>\n          {/* <TextualMonitor FlightCords={this.state.flightCords} /> */}\n\n          <VisualMonitor FlightCords={this.state.flightCords} />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/VisualFlightMonitor/visualFlightMonitor.js",[],"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/TextualMonitor/textualMonitor.js",["37"],"import React, { Component } from 'react';\r\nimport TextualMonitorCard from './TextMonitorCard/textualMonitorCard.js';\r\n\r\n\r\nconst convertJsonToArray = (fakeData) => {\r\n    const array = [];\r\n    for (var key in fakeData) {\r\n        if (fakeData.hasOwnProperty(key)) {\r\n            var val = fakeData[key];\r\n            console.log(key, val);\r\n            array.push({ key: key, val: val })\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\nclass TextualMonitor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"textual\">\r\n\r\n                 \r\n                        <div className=\"container\" style={{margin:\"0 auto\"}}>\r\n                            <h1 className=\"display-5\" style={{marginBottom:\"2.5rem\"}}>Textual Monitor</h1>\r\n                           <div class=\"row\" style={{margin:\"0 auto\" ,marginLeft: \"10%\"}}>\r\n                            {convertJsonToArray(this.props.FlightCords).map(el => {\r\n                                return <TextualMonitorCard name={el.key} value={el.val} />\r\n                            })}\r\n                           </div>\r\n                        </div>\r\n                 \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TextualMonitor;\r\n","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/TextualMonitor/TextMonitorCard/textualMonitorCard.js",[],"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/VisualFlightMonitor/HIS/HISComponent.js",["38"],"import React, { Component } from 'react';\r\nimport imgSrc from './arrowUp.png'\r\n\r\nclass HISComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log('inside HIS component');\r\n        console.log(props.HIS);\r\n        this.ctx = this.canvas = this.img = this.radius = null;\r\n    }\r\n    \r\n    componentDidUpdate(nextProps){\r\n        console.log(\"component did update\");\r\n        console.log(nextProps);\r\n        this.drawClock(-this.props.HIS)\r\n        \r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.canvas = this.refs.canvas;\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.img = this.refs.image;\r\n\r\n        this.radius = this.canvas.height / 2;\r\n        this.ctx.translate(this.radius, this.radius);\r\n        this.radius = this.radius * 0.90;\r\n\r\n        this.drawClock(-this.props.HIS);\r\n    \r\n\r\n    }\r\n     drawClock(his) {\r\n        this.ctx.save()\r\n        this.drawFace(this.ctx, this.radius, his);\r\n        this.drawNumbers(this.ctx, this.radius);\r\n        this.ctx.restore()\r\n        this.drawCenterImage(this.ctx,this.img)\r\n    }\r\n\r\n     drawFace(ctx, radius, his) {\r\n        ctx.beginPath();\r\n        this.drawBorder(ctx, radius)\r\n        ctx.rotate(his * Math.PI / 180)\r\n    }\r\n\r\n     drawNumbers(ctx, radius) {\r\n        var ang;\r\n        var num;\r\n        ctx.fillStyle = '#333'\r\n        ctx.font = radius * 0.15 + \"px arial\";\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.textAlign = \"center\";\r\n        for (num = 0; num < 360; num += 90) {\r\n            ang = num * Math.PI / (-12);\r\n            ctx.rotate(ang);\r\n            ctx.translate(0, -radius * 0.85);\r\n            ctx.rotate(-ang);\r\n            ctx.fillText(num.toString(), 0, 0);\r\n            ctx.rotate(ang);\r\n            ctx.translate(0, radius * 0.85);\r\n            ctx.rotate(-ang);\r\n        }\r\n    }\r\n\r\n     drawBorder(ctx, radius) {\r\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n        ctx.fillStyle = 'white';\r\n        ctx.fill();\r\n        let grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\r\n        grad.addColorStop(0, '#333');\r\n        grad.addColorStop(0.5, 'white');\r\n        grad.addColorStop(1, '#333');\r\n        ctx.strokeStyle = grad;\r\n        ctx.lineWidth = radius * 0.1;\r\n        ctx.stroke();\r\n        ctx.beginPath();\r\n    }\r\n\r\n     drawCenterImage(ctx,img) {\r\n        ctx.drawImage(img, -img.width / 2, -img.height / 2, 50, 50);\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"inside HIS render command\");\r\n        // console.log(this.props.his);\r\n        console.log(this.props.HIS);\r\n        return (\r\n            <div>\r\n                <canvas ref=\"canvas\" id=\"canvas\" width=\"275\" height=\"275\">\r\n                </canvas>\r\n                <div style={{ display: \"none\" }}>\r\n                    <img ref=\"image\" id=\"arrow\" width=\"50\" height=\"50\" src = {imgSrc} style={{ position: \"static\" }} className=\"hidden\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HISComponent;\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":18,"column":5,"nodeType":"49","messageId":"50","endLine":21,"endColumn":6},{"ruleId":"51","severity":1,"message":"52","line":93,"column":21,"nodeType":"53","endLine":93,"endColumn":138},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'TextualMonitor' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]