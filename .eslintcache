[{"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/index.js":"1","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/reportWebVitals.js":"2","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/App.js":"3","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/VisualFlightMonitor/visualFlightMonitor.js":"4","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/TextualMonitor/textualMonitor.js":"5","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/TextualMonitor/TextMonitorCard/textualMonitorCard.js":"6","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/VisualFlightMonitor/HIS/HSIComponent.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1346,"mtime":1607883642608,"results":"11","hashOfConfig":"9"},{"size":561,"mtime":1607883401720,"results":"12","hashOfConfig":"9"},{"size":1346,"mtime":1607704418805,"results":"13","hashOfConfig":"9"},{"size":648,"mtime":1607702840000,"results":"14","hashOfConfig":"9"},{"size":2667,"mtime":1607883588965,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1awsp0s",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/index.js",[],["34","35"],"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/reportWebVitals.js",[],"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/App.js",["36"],"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/VisualFlightMonitor/visualFlightMonitor.js",["37"],"import React, { Component } from 'react';\r\nimport HSIComponent from './HIS/HSIComponent';\r\n\r\n\r\nclass VisualMonitor extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"visual\">\r\n            <h1 class=\"display-5\">Visual Monitor</h1>\r\n\r\n             <HSIComponent hsi={this.props.FlightCords.hsi}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const jumbotronStyle = {\r\n//   width:'70%',\r\n//   height:'400px',\r\n//   margin:'0 auto',\r\n//   marginTop:'100px'\r\n// }\r\n\r\nexport default VisualMonitor;\r\n","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/TextualMonitor/textualMonitor.js",["38","39"],"import React, { Component } from 'react';\r\nimport TextualMonitorCard from './TextMonitorCard/textualMonitorCard.js';\r\n\r\nconst fakeData = { altitude: '100', his: '80', adi: '-50' };\r\nconst convertJsonToArray = (fakeData) => {\r\n    const array = [];\r\n    for (var key in fakeData) {\r\n        if (fakeData.hasOwnProperty(key)) {\r\n            var val = fakeData[key];\r\n            console.log(key, val);\r\n            array.push({ key: key, val: val })\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\nclass TextualMonitor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"textual\">\r\n\r\n                 \r\n                        <div className=\"container\" style={{margin:\"0 auto\"}}>\r\n                            <h1 className=\"display-5\" style={{marginBottom:\"2.5rem\"}}>Textual Monitor</h1>\r\n                           <div class=\"row\" style={{margin:\"0 auto\" ,marginLeft: \"10%\"}}>\r\n                            {convertJsonToArray(this.props.FlightCords).map(el => {\r\n                                return <TextualMonitorCard name={el.key} value={el.val} />\r\n                            })}\r\n                           </div>\r\n                        </div>\r\n                 \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TextualMonitor;\r\n","/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/TextualMonitor/TextMonitorCard/textualMonitorCard.js",[],"/mnt/c/Users/Sarit/Desktop/MonitorFlightDetailsClient/client/flight-monitor-client/src/VisualFlightMonitor/HIS/HSIComponent.js",["40","41"],"import React, { Component } from 'react';\r\nimport imgSrc from './arrowUp.png'\r\n\r\nclass HSIComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const img = this.refs.image;\r\n\r\n        var radius = canvas.height / 2;\r\n        ctx.translate(radius, radius);\r\n        radius = radius * 0.90;\r\n\r\n        drawClock(this.props.hsi);\r\n    \r\n\r\n        function drawClock(his) {\r\n            ctx.save()\r\n            drawFace(ctx, radius, his);\r\n            drawNumbers(ctx, radius);\r\n            ctx.restore()\r\n            drawCenterImage(ctx)\r\n        }\r\n\r\n        function drawFace(ctx, radius, his) {\r\n            ctx.beginPath();\r\n            drawBorder(ctx, radius)\r\n            ctx.rotate(his * Math.PI / 180)\r\n        }\r\n\r\n        function drawNumbers(ctx, radius) {\r\n            var ang;\r\n            var num;\r\n            ctx.fillStyle = '#333'\r\n            ctx.font = radius * 0.15 + \"px arial\";\r\n            ctx.textBaseline = \"middle\";\r\n            ctx.textAlign = \"center\";\r\n            for (num = 0; num < 360; num += 90) {\r\n                ang = num * Math.PI / (-12);\r\n                ctx.rotate(ang);\r\n                ctx.translate(0, -radius * 0.85);\r\n                ctx.rotate(-ang);\r\n                ctx.fillText(num.toString(), 0, 0);\r\n                ctx.rotate(ang);\r\n                ctx.translate(0, radius * 0.85);\r\n                ctx.rotate(-ang);\r\n            }\r\n        }\r\n\r\n        function drawBorder(ctx, radius) {\r\n            ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n            ctx.fillStyle = 'white';\r\n            ctx.fill();\r\n            let grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\r\n            grad.addColorStop(0, '#333');\r\n            grad.addColorStop(0.5, 'white');\r\n            grad.addColorStop(1, '#333');\r\n            ctx.strokeStyle = grad;\r\n            ctx.lineWidth = radius * 0.1;\r\n            ctx.stroke();\r\n            ctx.beginPath();\r\n        }\r\n\r\n        function drawCenterImage(ctx) {\r\n            ctx.drawImage(img, -img.width / 2, -img.height / 2, 50, 50);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <canvas ref=\"canvas\" id=\"canvas\" width=\"275\" height=\"275\">\r\n                </canvas>\r\n                <div style={{ display: \"none\" }}>\r\n                    <img ref=\"image\" id=\"arrow\" width=\"50\" height=\"50\" src = {imgSrc} style={{ position: \"static\" }} className=\"hidden\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HSIComponent;\r\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":22},{"ruleId":"50","severity":1,"message":"51","line":7,"column":3,"nodeType":"52","messageId":"53","endLine":10,"endColumn":4},{"ruleId":"46","severity":1,"message":"54","line":4,"column":7,"nodeType":"48","messageId":"49","endLine":4,"endColumn":15},{"ruleId":"50","severity":1,"message":"51","line":18,"column":5,"nodeType":"52","messageId":"53","endLine":21,"endColumn":6},{"ruleId":"50","severity":1,"message":"51","line":5,"column":5,"nodeType":"52","messageId":"53","endLine":7,"endColumn":6},{"ruleId":"55","severity":1,"message":"56","line":80,"column":21,"nodeType":"57","endLine":80,"endColumn":138},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'TextualMonitor' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'fakeData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]